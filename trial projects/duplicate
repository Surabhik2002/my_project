import boto3
from botocore.exceptions import NoCredentialsError, PartialCredentialsError
import mimetypes
import os

# AWS Credentials and Bucket Details
AWS_ACCESS_KEY = 'xxxxxxxxxxxxxx'
AWS_SECRET_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxx'
BUCKET_NAME = 'xxxxxxxxxxxxxxxx'
REGION = 'xxxxxxxxxxx'  # Change to your bucket's region

def upload_images_to_s3(file_paths, bucket_name):
    """
    Uploads multiple images to AWS S3 and returns their public URLs.
    :param file_paths: List of file paths to images.
    :param bucket_name: S3 bucket name.
    :return: List of public URLs for the uploaded images.
    """
    try:
        # Initialize the S3 client
        s3_client = boto3.client(
            's3',
            aws_access_key_id=AWS_ACCESS_KEY,
            aws_secret_access_key=AWS_SECRET_KEY,
            region_name=REGION
        )
        
        uploaded_urls = []

        for file_path in file_paths:
            # Ensure the file exists
            if not os.path.exists(file_path):
                print(f"File not found: {file_path}")
                continue

            # Extract the file name to use as the object name
            object_name = f"images/{os.path.basename(file_path)}"
            
            # Detect MIME type of the file
            content_type, _ = mimetypes.guess_type(file_path)
            if not content_type:
                content_type = 'application/octet-stream'

            # Upload the file with the correct Content-Type
            s3_client.upload_file(
                file_path,
                bucket_name,
                object_name,
                ExtraArgs={'ContentType': content_type}  # Set metadata
            )
            
            # Generate the URL
            url = f"https://{bucket_name}.s3.{REGION}.amazonaws.com/{object_name}"
            uploaded_urls.append(url)
        
        return uploaded_urls
    except FileNotFoundError:
        print("One or more files were not found.")
        return []
    except NoCredentialsError:
        print("AWS credentials not available.")
        return []
    except PartialCredentialsError:
        print("Incomplete AWS credentials provided.")
        return []
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
        return []

# Example usage
file_paths = [
    "C:/Users/DELL/Downloads/doll.jpg",
    "C:/Users/DELL/Downloads/car.jpg",
    "C:/Users/DELL/Downloads/cat.png",
]

# Upload and get URLs
image_urls = upload_images_to_s3(file_paths, BUCKET_NAME)

if image_urls:
    print("Images successfully uploaded!")
    for url in image_urls:
        print(url)
else:
    print("Image upload failed.")
